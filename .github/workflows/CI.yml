# SPDX-License-Identifier: MIT OR Apache-2.0 OR Zlib
# Copyright 2022-2023 John Nunley
#
# Licensed under the Apache License, Version 2.0, the MIT License, and
# the Zlib license ("the Licenses"), you may not use this file except in
# compliance with one of the the Licenses, at your option. You may obtain
#  a copy of the Licenses at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#     http://opensource.org/licenses/MIT
#     http://opensource.org/licenses/Zlib
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the Licenses is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the Licenses for the specific language governing permissions and
# limitations under the Licenses.

name: CI

on:
  push:
    branches:
      - master
  pull_request:

env:
  RUSTFLAGS: -Dwarnings
  clippy_version: 1.60.0

jobs:
  rustfmt:
    name: rustfmt
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - rust: stable
    
    steps:
      - uses: actions/checkout@v3
      - name: Install Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: ${{ matrix.rust }}
          profile: minimal
          override: true
          components: rustfmt
      - uses: Swatinem/rust-cache@v1
      - name: Run rustfmt
        run: cargo fmt --check
   
  clippy:
    name: clippy
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - name: Install Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: ${{ env.clippy_version }}
          override: true
          components: clippy
      - uses: Swatinem/rust-cache@v1
      - name: Run Clippy
        uses: actions-rs/cargo@v1
        with:
          command: clippy
          args: --all --tests --all-features

  test:
    runs-on: ubuntu-latest 
    strategy:
      matrix:
        toolchain:
         - stable
         - beta
         - nightly

    steps:
      - uses: actions/checkout@v3
        with:
          submodules: true
      - name: Install Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: ${{ matrix.toolchain }}
          override: true
      - uses: Swatinem/rust-cache@v1

      - name: Test
        run: cargo test

  msrv:
    name: Build MSRV
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - name: Install Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: 1.48.0
          override: true
      - uses: Swatinem/rust-cache@v1
      - name: Build
        run: cargo build
      
  
